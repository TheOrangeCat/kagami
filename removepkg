#!/bin/bash
#
# Small utiltity to remove packages
#

umask 022

# cleanup
unset dpkg root myhooks name version release backup abackup nondir dirlis

LC_ALL="C"
VERSION="20190415"
DB="/var/lib/kagami"
PKGS="$DB/pkgs"
HOOKS="$DB/hooks"
UPDATE=0
NO_BACKUP=0
RUN_SCRIPTS=1
RUN_HOOKS=1
ROOT='/'

msg() {
	local msg=$(echo $1 | tr -s / /)
	printf "\e[1m\e[32m==>\e[0m $msg\n"
}

die() {
	local msg=$(echo $1 | tr -s / /)
	printf "\e[1m\e[31m==!\e[0m $msg\n"

	# remove garbage
	unset dpkg root myhooks name version release backup abackup nondir dirlis

	# bye
	exit 1
}

check_for_root() {
	if [[ $EUID -ne 0 ]]; then
	die "kagami: package manager should be run as root"
	fi
}

# from old apk-tools
list_uninstall() {
	local f p
	local files=$(sort -r "$1" | sed 's:^:'"$root"': ; s:/^[^\.]\./::g; s:/\{2,\}:/:g; s:/\./:/:g')
	if [ -z "$DRYRUN" ] ; then
		echo "$files" | tr '\n' '\0' | xargs -0 rm 2>/dev/null
		echo "$files" | tr '\n' '\0' | xargs -0 rmdir 2>/dev/null
		[ "$2" ] && echo "$files" >> "$2"
	fi
	return 0
}

run_hooks() {
	if [ "$RUN_HOOKS" = "1" ]; then
		for myhooks in $(ls "$root"$HOOKS/ | sort); do
			chroot "$root"/ /bin/bash $HOOKS/$myhooks
		done
	fi
}

run_script() {
	local script="$1"

	if [ "$RUN_SCRIPTS" = "1" ]; then
		if [ -f $PKGS/$dpkg/$script ]; then
			/usr/bin/bash $PKGS/$dpkg/$script || true
		fi
	fi
}

backup() {
	if [ "$NO_BACKUP" != "1" ]; then
		if [ -n "$backup" ]; then
			for abackup in ${backup[@]}; do
				if [ -f "$root"/$abackup ]; then
					mv "$root"/$abackup "$root"/$abackup.bak
				fi
			done
		fi
	fi
}

restore_files() {
	if [ "$NO_BACKUP" != "1" ]; then
		if [ -n "$backup" ]; then
			for abackup in ${backup[@]}; do
				if [ -f "$root"/$abackup ]; then
					mv "$root"/$abackup.bak "$root"/$abackup
				fi
			done
		fi
	fi
}

check_for_root

if [ -z "$1" ]; then
	die "kagami: specify arguments. Consider to run 'removepkg --help'"
else
	while [ "$1" ]; do
		case $1 in
			--no-backup|-nb)
				NO_BACKUP=1
				;;
			--no-scripts-ns)
				RUN_SCRIPTS=0
				;;
			--no-hooks|-nh)
				RUN_HOOKS=0
				;;
			--root=*)
				ROOT="${ARG#*=}"
				;;
			*)
				MYPKG="$1"
				;;
		esac
		shift
	done
fi

dpkg="$MYPKG"
root="$ROOT"

[ -z "$dpkg" ] || die "kagami: package name not specified"

if [ ! -d "$root"/$PKGS/$dpkg ]; then
	die "kagami: package not installed"
fi

msg "Removing $dpkg"
source "$root"/$PKGS/$dpkg/manifest

backup

run_script pre-remove

dirlist=`grep '/$' "$root"/$PKGS/$dpkg/filelist`
nondir=`grep -v '/$' "$root"/$PKGS/$dpkg/filelist`
list_uninstall "$root"/$PKGS/$dpkg/filelist
rm -rf "$root"/$PKGS/$dpkg

restore_files

run_script post-remove

run_hooks

exit 0

